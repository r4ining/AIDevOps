---
# Source: grafana-operator/templates/networkpolicy.yaml
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: grafana-operator
  namespace: "observe"
  labels:
    app.kubernetes.io/instance: grafana-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: grafana-operator
    app.kubernetes.io/version: 5.19.4
    helm.sh/chart: grafana-operator-4.9.37
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/instance: grafana-operator
      app.kubernetes.io/name: grafana-operator
  policyTypes:
    - Ingress
    - Egress
  egress:
    - {}
  ingress:
    - ports:
        - port: 8080
        # Allow access to Grafana. As it does not have a label to identify its created grafana instances, we will use the standard grafana port (currently hardcoded in the operator)
        - port: 3000
---
# Source: grafana-operator/templates/pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: grafana-operator
  namespace: "observe"
  labels:
    app.kubernetes.io/instance: grafana-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: grafana-operator
    app.kubernetes.io/version: 5.19.4
    helm.sh/chart: grafana-operator-4.9.37
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: grafana-operator
      app.kubernetes.io/name: grafana-operator
      app.kubernetes.io/component: operator
---
# Source: grafana-operator/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: grafana-operator
  namespace: "observe"
  labels:
    app.kubernetes.io/instance: grafana-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: grafana-operator
    app.kubernetes.io/version: 5.19.4
    helm.sh/chart: grafana-operator-4.9.37
automountServiceAccountToken: false
---
# Source: grafana-operator/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: grafana-operator-observe
  labels:
    app.kubernetes.io/instance: grafana-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: grafana-operator
    app.kubernetes.io/version: 5.19.4
    helm.sh/chart: grafana-operator-4.9.37
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - persistentvolumeclaims
      - secrets
      - serviceaccounts
      - services
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - get
      - list
      - patch
      - watch
  - apiGroups:
      - apps
    resources:
      - deployments
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - grafana.integreatly.org
    resources:
      - grafanaalertrulegroups
      - grafanacontactpoints
      - grafanadashboards
      - grafanadatasources
      - grafanafolders
      - grafanalibrarypanels
      - grafanamutetimings
      - grafananotificationpolicies
      - grafananotificationpolicyroutes
      - grafananotificationtemplates
      - grafanas
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - grafana.integreatly.org
    resources:
      - grafanaalertrulegroups/finalizers
      - grafanacontactpoints/finalizers
      - grafanadashboards/finalizers
      - grafanadatasources/finalizers
      - grafanafolders/finalizers
      - grafanalibrarypanels/finalizers
      - grafanamutetimings/finalizers
      - grafananotificationpolicies/finalizers
      - grafananotificationpolicyroutes/finalizers
      - grafananotificationtemplates/finalizers
      - grafanas/finalizers
    verbs:
      - update
  - apiGroups:
      - grafana.integreatly.org
    resources:
      - grafanaalertrulegroups/status
      - grafanacontactpoints/status
      - grafanadashboards/status
      - grafanadatasources/status
      - grafanafolders/status
      - grafanalibrarypanels/status
      - grafanamutetimings/status
      - grafananotificationpolicies/status
      - grafananotificationpolicyroutes/status
      - grafananotificationtemplates/status
      - grafanas/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - route.openshift.io
    resources:
      - routes
      - routes/custom-host
    verbs:
      - create
      - delete
      - get
      - list
      - update
      - watch
---
# Source: grafana-operator/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: grafana-operator-observe
  labels:
    app.kubernetes.io/instance: grafana-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: grafana-operator
    app.kubernetes.io/version: 5.19.4
    helm.sh/chart: grafana-operator-4.9.37
subjects:
  - kind: ServiceAccount
    name:  grafana-operator
    namespace: "observe"
roleRef:
  kind: ClusterRole
  name: grafana-operator-observe
  apiGroup: rbac.authorization.k8s.io
---
# Source: grafana-operator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana-operator
  namespace: "observe"
  labels:
    app.kubernetes.io/instance: grafana-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: grafana-operator
    app.kubernetes.io/version: 5.19.4
    helm.sh/chart: grafana-operator-4.9.37
    app.kubernetes.io/component: operator
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: grafana-operator
      app.kubernetes.io/name: grafana-operator
  strategy: 
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: grafana-operator
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: grafana-operator
        app.kubernetes.io/version: 5.19.4
        helm.sh/chart: grafana-operator-4.9.37
        app.kubernetes.io/component: operator
    spec:
      
      automountServiceAccountToken: true
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: grafana-operator
                    app.kubernetes.io/name: grafana-operator
                topologyKey: kubernetes.io/hostname
              weight: 1
      serviceAccountName: grafana-operator
      securityContext:
        fsGroup: 1001
        fsGroupChangePolicy: Always
        supplementalGroups: []
        sysctls: []
      containers:
        - name: grafana-operator
          image: docker.io/bitnami/grafana-operator:5.19.4-debian-12-r2
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          command:
            - grafana-operator
          args:
            - --leader-elect=True
            - --health-probe-bind-address=:8081
            - --metrics-bind-address=0.0.0.0:8080
          env:
            - name: TEMPLATE_PATH
              value: /usr/local/bin/templates
            - name: WATCH_NAMESPACE
              value: ""
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: OPERATOR_NAME
              value: grafana-operator
          envFrom:
          resources:
            limits:
              cpu: 150m
              ephemeral-storage: 2Gi
              memory: 192Mi
            requests:
              cpu: 100m
              ephemeral-storage: 50Mi
              memory: 128Mi
          ports:
            - containerPort: 8081
              name: health
              protocol: TCP
            - containerPort: 8080
              name: metrics
              protocol: TCP
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            httpGet:
              path: /healthz
              port: health
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            httpGet:
              path: /readyz
              port: health
          startupProbe:
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            httpGet:
              path: /healthz
              port: health
          volumeMounts:
            - name: empty-dir
              mountPath: /tmp
              subPath: tmp-dir
      volumes:
        - name: empty-dir
          emptyDir: {}
---
# Source: grafana-operator/templates/grafana.yaml
apiVersion: grafana.integreatly.org/v1beta1
kind: Grafana
metadata:
  name: grafana-operator-grafana
  namespace: "observe"
  labels:
    app.kubernetes.io/instance: grafana-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: grafana-operator
    app.kubernetes.io/version: 5.19.4
    helm.sh/chart: grafana-operator-4.9.37
spec:
  client:
    timeout: 5
  service:
    spec:
      type: ClusterIP
  deployment:
    spec:
      replicas: 1
      selector:
        matchLabels:
          app.kubernetes.io/instance: grafana-operator
          app.kubernetes.io/name: grafana-operator
          app.kubernetes.io/component: grafana
      template:
        metadata:
          labels:
            app.kubernetes.io/instance: grafana-operator
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: grafana-operator
            app.kubernetes.io/version: 5.19.4
            helm.sh/chart: grafana-operator-4.9.37
            app.kubernetes.io/component: grafana
        spec:
          
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
                - podAffinityTerm:
                    labelSelector:
                      matchLabels:
                        app.kubernetes.io/instance: grafana-operator
                        app.kubernetes.io/name: grafana-operator
                        app.kubernetes.io/component: grafana
                    topologyKey: kubernetes.io/hostname
                  weight: 1
          securityContext:
            fsGroup: 1001
            fsGroupChangePolicy: Always
            supplementalGroups: []
            sysctls: []
          volumes:
            - name: empty-dir
              emptyDir: {}
            - name: grafana-data
              emptyDir: {}
          containers:
            - name: grafana
              image: docker.io/bitnami/grafana:12.1.1-debian-12-r1
              imagePullPolicy: IfNotPresent
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                  - ALL
                privileged: false
                readOnlyRootFilesystem: false
                runAsGroup: 0
                runAsNonRoot: true
                runAsUser: 1001
                seLinuxOptions: {}
                seccompProfile:
                  type: RuntimeDefault
              livenessProbe:
                initialDelaySeconds: 120
                periodSeconds: 10
                timeoutSeconds: 5
                successThreshold: 1
                failureThreshold: 6
                tcpSocket:
                  port: 3000
              readinessProbe:
                initialDelaySeconds: 30
                periodSeconds: 10
                timeoutSeconds: 5
                successThreshold: 1
                failureThreshold: 6
                httpGet:
                  path: /api/health
                  port: 3000
                  scheme: HTTP
              volumeMounts:
                - name: empty-dir
                  mountPath: /tmp
                  subPath: tmp-dir
                - name: empty-dir
                  mountPath: /opt/bitnami/grafana/conf
                  subPath: app-conf-dir
                - name: empty-dir
                  mountPath: /opt/bitnami/grafana/tmp
                  subPath: app-tmp-dir
  config:
    analytics:
      check_for_updates: "false"
      reporting_enabled: "false"
    database:
      wal: "true"
    log:
      level: warn
      mode: console
    security:
      disable_gravatar: "false"
    server:
      root_url: |-
        http://localhost:3000
  jsonnet:
    libraryLabelSelector:
      matchLabels:
        app.kubernetes.io/instance: 'grafana-operator'
